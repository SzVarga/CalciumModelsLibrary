// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calmodulin
NumericMatrix calmodulin(NumericVector time, NumericVector calcium, double dt, double vol, double k_on, double Km, double k_off, double E0_conc, int h);
RcppExport SEXP CalciumModelsLibrary_calmodulin(SEXP timeSEXP, SEXP calciumSEXP, SEXP dtSEXP, SEXP volSEXP, SEXP k_onSEXP, SEXP KmSEXP, SEXP k_offSEXP, SEXP E0_concSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type calcium(calciumSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type vol(volSEXP);
    Rcpp::traits::input_parameter< double >::type k_on(k_onSEXP);
    Rcpp::traits::input_parameter< double >::type Km(KmSEXP);
    Rcpp::traits::input_parameter< double >::type k_off(k_offSEXP);
    Rcpp::traits::input_parameter< double >::type E0_conc(E0_concSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(calmodulin(time, calcium, dt, vol, k_on, Km, k_off, E0_conc, h));
    return rcpp_result_gen;
END_RCPP
}
// calmodulin_props
NumericVector calmodulin_props(NumericVector part_num, double calcium);
RcppExport SEXP CalciumModelsLibrary_calmodulin_props(SEXP part_numSEXP, SEXP calciumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type part_num(part_numSEXP);
    Rcpp::traits::input_parameter< double >::type calcium(calciumSEXP);
    rcpp_result_gen = Rcpp::wrap(calmodulin_props(part_num, calcium));
    return rcpp_result_gen;
END_RCPP
}
// calmodulin_stM
NumericMatrix calmodulin_stM();
RcppExport SEXP CalciumModelsLibrary_calmodulin_stM() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(calmodulin_stM());
    return rcpp_result_gen;
END_RCPP
}
// camkii
NumericMatrix camkii(NumericVector time, NumericVector calcium, double dt, double vol, double a, double b, double c, double k_IB, double k_BI, double k_PT, double k_TP, double k_TA, double k_AT, double k_AA, double c_I, double c_B, double c_P, double c_T, double c_A, double camT, double Kd, double Vm_phos, double Kd_phos, double totalC, double Wi_conc, double Wb_conc, double Wp_conc, double Wt_conc, double Wa_conc, int h);
RcppExport SEXP CalciumModelsLibrary_camkii(SEXP timeSEXP, SEXP calciumSEXP, SEXP dtSEXP, SEXP volSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP k_IBSEXP, SEXP k_BISEXP, SEXP k_PTSEXP, SEXP k_TPSEXP, SEXP k_TASEXP, SEXP k_ATSEXP, SEXP k_AASEXP, SEXP c_ISEXP, SEXP c_BSEXP, SEXP c_PSEXP, SEXP c_TSEXP, SEXP c_ASEXP, SEXP camTSEXP, SEXP KdSEXP, SEXP Vm_phosSEXP, SEXP Kd_phosSEXP, SEXP totalCSEXP, SEXP Wi_concSEXP, SEXP Wb_concSEXP, SEXP Wp_concSEXP, SEXP Wt_concSEXP, SEXP Wa_concSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type calcium(calciumSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type vol(volSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type k_IB(k_IBSEXP);
    Rcpp::traits::input_parameter< double >::type k_BI(k_BISEXP);
    Rcpp::traits::input_parameter< double >::type k_PT(k_PTSEXP);
    Rcpp::traits::input_parameter< double >::type k_TP(k_TPSEXP);
    Rcpp::traits::input_parameter< double >::type k_TA(k_TASEXP);
    Rcpp::traits::input_parameter< double >::type k_AT(k_ATSEXP);
    Rcpp::traits::input_parameter< double >::type k_AA(k_AASEXP);
    Rcpp::traits::input_parameter< double >::type c_I(c_ISEXP);
    Rcpp::traits::input_parameter< double >::type c_B(c_BSEXP);
    Rcpp::traits::input_parameter< double >::type c_P(c_PSEXP);
    Rcpp::traits::input_parameter< double >::type c_T(c_TSEXP);
    Rcpp::traits::input_parameter< double >::type c_A(c_ASEXP);
    Rcpp::traits::input_parameter< double >::type camT(camTSEXP);
    Rcpp::traits::input_parameter< double >::type Kd(KdSEXP);
    Rcpp::traits::input_parameter< double >::type Vm_phos(Vm_phosSEXP);
    Rcpp::traits::input_parameter< double >::type Kd_phos(Kd_phosSEXP);
    Rcpp::traits::input_parameter< double >::type totalC(totalCSEXP);
    Rcpp::traits::input_parameter< double >::type Wi_conc(Wi_concSEXP);
    Rcpp::traits::input_parameter< double >::type Wb_conc(Wb_concSEXP);
    Rcpp::traits::input_parameter< double >::type Wp_conc(Wp_concSEXP);
    Rcpp::traits::input_parameter< double >::type Wt_conc(Wt_concSEXP);
    Rcpp::traits::input_parameter< double >::type Wa_conc(Wa_concSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(camkii(time, calcium, dt, vol, a, b, c, k_IB, k_BI, k_PT, k_TP, k_TA, k_AT, k_AA, c_I, c_B, c_P, c_T, c_A, camT, Kd, Vm_phos, Kd_phos, totalC, Wi_conc, Wb_conc, Wp_conc, Wt_conc, Wa_conc, h));
    return rcpp_result_gen;
END_RCPP
}
// camkii_props
double camkii_props(NumericVector part_num, double calcium, int rId);
RcppExport SEXP CalciumModelsLibrary_camkii_props(SEXP part_numSEXP, SEXP calciumSEXP, SEXP rIdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type part_num(part_numSEXP);
    Rcpp::traits::input_parameter< double >::type calcium(calciumSEXP);
    Rcpp::traits::input_parameter< int >::type rId(rIdSEXP);
    rcpp_result_gen = Rcpp::wrap(camkii_props(part_num, calcium, rId));
    return rcpp_result_gen;
END_RCPP
}
// camkii_stM
NumericMatrix camkii_stM();
RcppExport SEXP CalciumModelsLibrary_camkii_stM() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(camkii_stM());
    return rcpp_result_gen;
END_RCPP
}
// pkc_props
double pkc_props(NumericVector part_num, double calcium, int rId);
RcppExport SEXP CalciumModelsLibrary_pkc_props(SEXP part_numSEXP, SEXP calciumSEXP, SEXP rIdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type part_num(part_numSEXP);
    Rcpp::traits::input_parameter< double >::type calcium(calciumSEXP);
    Rcpp::traits::input_parameter< int >::type rId(rIdSEXP);
    rcpp_result_gen = Rcpp::wrap(pkc_props(part_num, calcium, rId));
    return rcpp_result_gen;
END_RCPP
}
// pkc_stM
NumericMatrix pkc_stM();
RcppExport SEXP CalciumModelsLibrary_pkc_stM() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(pkc_stM());
    return rcpp_result_gen;
END_RCPP
}
// simulator
NumericMatrix simulator(NumericVector time, NumericVector calcium, NumericVector init_conc, Function calc_props, Function provide_stM, double dt, double vol);
RcppExport SEXP CalciumModelsLibrary_simulator(SEXP timeSEXP, SEXP calciumSEXP, SEXP init_concSEXP, SEXP calc_propsSEXP, SEXP provide_stMSEXP, SEXP dtSEXP, SEXP volSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type calcium(calciumSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type init_conc(init_concSEXP);
    Rcpp::traits::input_parameter< Function >::type calc_props(calc_propsSEXP);
    Rcpp::traits::input_parameter< Function >::type provide_stM(provide_stMSEXP);
    Rcpp::traits::input_parameter< double >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< double >::type vol(volSEXP);
    rcpp_result_gen = Rcpp::wrap(simulator(time, calcium, init_conc, calc_props, provide_stM, dt, vol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"CalciumModelsLibrary_calmodulin", (DL_FUNC) &CalciumModelsLibrary_calmodulin, 9},
    {"CalciumModelsLibrary_calmodulin_props", (DL_FUNC) &CalciumModelsLibrary_calmodulin_props, 2},
    {"CalciumModelsLibrary_calmodulin_stM", (DL_FUNC) &CalciumModelsLibrary_calmodulin_stM, 0},
    {"CalciumModelsLibrary_camkii", (DL_FUNC) &CalciumModelsLibrary_camkii, 30},
    {"CalciumModelsLibrary_camkii_props", (DL_FUNC) &CalciumModelsLibrary_camkii_props, 3},
    {"CalciumModelsLibrary_camkii_stM", (DL_FUNC) &CalciumModelsLibrary_camkii_stM, 0},
    {"CalciumModelsLibrary_pkc_props", (DL_FUNC) &CalciumModelsLibrary_pkc_props, 3},
    {"CalciumModelsLibrary_pkc_stM", (DL_FUNC) &CalciumModelsLibrary_pkc_stM, 0},
    {"CalciumModelsLibrary_simulator", (DL_FUNC) &CalciumModelsLibrary_simulator, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_CalciumModelsLibrary(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
