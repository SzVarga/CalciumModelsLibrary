// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calmodulin_calculate_amu
void calmodulin_calculate_amu();
RcppExport SEXP CalciumModelsLibrary_calmodulin_calculate_amu() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    calmodulin_calculate_amu();
    return R_NilValue;
END_RCPP
}
// calmodulin_update_system
void calmodulin_update_system(unsigned int rIndex);
RcppExport SEXP CalciumModelsLibrary_calmodulin_update_system(SEXP rIndexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type rIndex(rIndexSEXP);
    calmodulin_update_system(rIndex);
    return R_NilValue;
END_RCPP
}
// camkii_calculate_amu
void camkii_calculate_amu();
RcppExport SEXP CalciumModelsLibrary_camkii_calculate_amu() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    camkii_calculate_amu();
    return R_NilValue;
END_RCPP
}
// camkii_update_system
void camkii_update_system(unsigned int rIndex);
RcppExport SEXP CalciumModelsLibrary_camkii_update_system(SEXP rIndexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type rIndex(rIndexSEXP);
    camkii_update_system(rIndex);
    return R_NilValue;
END_RCPP
}
// pkc_calculate_amu
void pkc_calculate_amu();
RcppExport SEXP CalciumModelsLibrary_pkc_calculate_amu() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    pkc_calculate_amu();
    return R_NilValue;
END_RCPP
}
// pkc_update_system
void pkc_update_system(unsigned int rIndex);
RcppExport SEXP CalciumModelsLibrary_pkc_update_system(SEXP rIndexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type rIndex(rIndexSEXP);
    pkc_update_system(rIndex);
    return R_NilValue;
END_RCPP
}
// simulator
NumericMatrix simulator(NumericVector param_time, NumericVector param_calcium, double param_timestep, double param_vol, NumericVector param_init_conc);
RcppExport SEXP CalciumModelsLibrary_simulator(SEXP param_timeSEXP, SEXP param_calciumSEXP, SEXP param_timestepSEXP, SEXP param_volSEXP, SEXP param_init_concSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type param_time(param_timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_calcium(param_calciumSEXP);
    Rcpp::traits::input_parameter< double >::type param_timestep(param_timestepSEXP);
    Rcpp::traits::input_parameter< double >::type param_vol(param_volSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_init_conc(param_init_concSEXP);
    rcpp_result_gen = Rcpp::wrap(simulator(param_time, param_calcium, param_timestep, param_vol, param_init_conc));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"CalciumModelsLibrary_calmodulin_calculate_amu", (DL_FUNC) &CalciumModelsLibrary_calmodulin_calculate_amu, 0},
    {"CalciumModelsLibrary_calmodulin_update_system", (DL_FUNC) &CalciumModelsLibrary_calmodulin_update_system, 1},
    {"CalciumModelsLibrary_camkii_calculate_amu", (DL_FUNC) &CalciumModelsLibrary_camkii_calculate_amu, 0},
    {"CalciumModelsLibrary_camkii_update_system", (DL_FUNC) &CalciumModelsLibrary_camkii_update_system, 1},
    {"CalciumModelsLibrary_pkc_calculate_amu", (DL_FUNC) &CalciumModelsLibrary_pkc_calculate_amu, 0},
    {"CalciumModelsLibrary_pkc_update_system", (DL_FUNC) &CalciumModelsLibrary_pkc_update_system, 1},
    {"CalciumModelsLibrary_simulator", (DL_FUNC) &CalciumModelsLibrary_simulator, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_CalciumModelsLibrary(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
